[project]
name = "cert-transparency-slack"
version = "0.1.0"
description = ""
authors = [
  { name = "Bruno Alla", email = "bruno.alla@festicket.com" },
]
requires-python = ">=3.9"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "environs>=11,<12",
  "httpx>=0.27,<1",
  "sentry-sdk>=2,<3",
  "slackclient>=2.9,<3",
]

[dependency-groups]
dev = [
  "coverage>=7,<8",
  "pytest>=8,<9",
  "pytest-cov>=6,<7",
  "pytest-mock>=3.3,<4",
  "respx>=0.21,<1",
]

[tool.poetry.dependencies]
python = "^3.9"
httpx = "^0.27.0"
slackclient = "^2.9"
environs = "^11.0.0"
sentry-sdk = "^2.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
respx = "^0.21.0"
pytest-mock = "^3.3"
pytest-cov = "^6.0.0"
coverage = "^7.0"

[tool.ruff]
target-version = "py39"
line-length = 88

lint.select = [
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "D",   # flake8-docstrings
  "E",   # pycodestyle
  "F",   # pyflake
  "I",   # isort
  "RUF", # ruff specific
  "S",   # flake8-bandit
  "UP",  # pyupgrade
  "W",   # pycodestyle
]
lint.ignore = [
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
  "D107", # Missing docstring in `__init__`
  "D203", # 1 blank line required before class docstring
  "D212", # Multi-line docstring summary should start at the first line
  "D401", # First line of docstring should be in imperative mood
]
lint.per-file-ignores."tests/**/*" = [
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "S101",
]

[tool.pytest.ini_options]
addopts = "-Wdefault --cov=src"

[tool.coverage.run]
branch = true
source = [ "src" ]

[tool.coverage.report]
ignore_errors = true
